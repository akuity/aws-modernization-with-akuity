version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: latest
    commands:
      - echo "Installing Hugo..."
      - echo "System architecture info:"
      - uname -a
      - echo "Getting Hugo release..."
      # Download latest non-extended version for AMD64/x86_64
      - curl -s https://api.github.com/repos/gohugoio/hugo/releases/latest | grep "browser_download_url.*linux-amd64.*tar.gz" | grep -v "extended" | cut -d '"' -f 4 | wget -qi -
      - HUGO_TAR=$(find . -name "*linux-amd64*.tar.gz")
      - echo "Found Hugo tar file: ${HUGO_TAR}"
      # Extract and verify contents
      - tar -xvzf "${HUGO_TAR}"
      - file hugo
      - sudo chmod +x hugo
      - sudo mv hugo /usr/local/bin/hugo
      - hugo version

  pre_build:
    commands:
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}

      - echo "Initializing Git Repo"
      - git init
      - git remote add origin $FULL_REPO_URL
      - git fetch
      - git checkout -f "$CODEBUILD_RESOLVED_SOURCE_VERSION"

      - echo "Initializing and updating Git submodules..."
      - git submodule sync
      - git submodule update --init --recursive

      - echo "Installing dependencies..."
      - gem install asciidoctor

  build:
    commands:
      - echo "Building Website..."
      - hugo -D -d public

      - echo "Deploying Website to S3..."
      - aws s3 sync public/ s3://${WEB_SITE_BUCKET}/ --delete

      - echo "Invalidating CloudFront Cache..."
      - aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_DISTRO_ID} --paths "/*"

  post_build:
    commands:
      - echo "Build completed successfully!"
